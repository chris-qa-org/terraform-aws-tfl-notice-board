name: Continuous integration Module Deplyment

on:
  push:
    branches: main
  pull_request:

env:
  MODULE_DEPLOYMENT_DIR: "module-deployment"

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Get terraform version
        id: get-terraform-version
        run: |
          DOTFILE_VERSION=$(cat ${{ env.MODULE_DEPLOYMENT_DIR }}/.terraform-version)
          echo "version=$DOTFILE_VERSION" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: ${{ steps.get-terraform-version.outputs.version }}

      - name: Run a Terraform init
        run: |
          terraform -chdir=${{ env.MODULE_DEPLOYMENT_DIR }} \
          init

      - name: Run a Terraform validate
        run: |
          terraform -chdir=${{ env.MODULE_DEPLOYMENT_DIR }} \
          validate

      - name: Run a Terraform format check
        run: |
          terraform -chdir=${{ env.MODULE_DEPLOYMENT_DIR }} \
          fmt -check=true -diff=true

  terraform-docs-validation:
    name: Terraform Docs validation
    needs: terraform-validate
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.TERRAFORM_DOCS_RENOVATE_WORKFLOW_GITHUB_TOKEN }}

      - name: Get PR base branch
        id: pr-base-branch-name
        if: github.event_name == 'pull_request'
        run: |
          echo "GITHUB_PR_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV

      - name: Get commit message
        run: |
          echo "GIT_COMMIT_MESSAGE=$(git show -s --format=%s)" >> $GITHUB_ENV

      - name: Generate Terraform docs
        uses: terraform-docs/gh-actions@v1.1.0
        if: "!startsWith(env.GITHUB_PR_BRANCH, 'renovate/')"
        with:
          working-dir: ${{ env.MODULE_DEPLOYMENT_DIR }}
          config-file: ${{ env.MODULE_DEPLOYMENT_DIR }}/.terraform-docs.yml
          output-file: README.md
          output-method: inject
          fail-on-diff: true

      - name: Generate Terraform docs for Renovate
        uses: terraform-docs/gh-actions@v1.1.0
        if: "startsWith(env.GITHUB_PR_BRANCH, 'renovate/')"
        with:
          working-dir: ${{ env.MODULE_DEPLOYMENT_DIR }}
          config-file: ${{ env.MODULE_DEPLOYMENT_DIR }}/.terraform-docs.yml
          output-file: README.md
          output-method: inject
          git-push: true
          ref: ${{ github.event.pull_request.head.ref }}
          git-commit-message: "${{ env.GIT_COMMIT_MESSAGE }} - Terraform Docs Module Deployment"
